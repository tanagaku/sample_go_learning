# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  #URL for posting job results to slack
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # 共通処理
  setup:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: set up
        uses: actions/setup-go@v2
        with:
          go-version: 1.13.8
        id: Go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Cache
        uses: actions/cache@v2.1.0
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
             ${{ runner.os }}-go-
     # 失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.2.0
        if: failure()
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: SetUp Failure
          SLACK_COLOR: danger

  # buildテスト
  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: build
        run: go build ./...
      # 失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.2.0
        if: failure()
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: Build Failure
          SLACK_COLOR: danger
       
  # testを通す
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: test
        run: go test ./... -v

      # 成功時はこちらのステップが実行される
      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: Test Success
          SLACK_COLOR: good
    
      # 失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.2.0
        if: failure()
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: Test Failure
          SLACK_COLOR: danger
  proto_checks:
    name: proto lint, breaking changes detection and generating stubs from protos
    needs: [build,test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: wizhi/setup-buf@v1
        with:
          version: '0.36.0'
      - uses: arduino/setup-protoc@v1
        with:
          version: '3.x'

      - name: Fetching base branch
        run: |
                    git fetch -u origin ${{ github.base_ref }}:${{ github.base_ref }}
      - name: Installing protoc-gen-go
        run: |
          go get github.com/golang/protobuf/protoc-gen-go
          go get google.golang.org/grpc/cmd/protoc-gen-go-grpc          
      - name: Generating protos
        run: |
           protoc -I=$PROTO_DIR \ 
           --go_out=$GEN_OUT_DIR \ 
           $PROTO_DIR/sample.proto
        # $(find $PROTO_DIR -type f -name '*.proto')       
        env:
          GEN_OUT_DIR: grpc/proto/pb
          PROTO_DIR: grpc/proto
      # 成功時はこちらのステップが実行される
      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: proto Success
          SLACK_COLOR: good
    
      # 失敗時はこちらのステップが実行される
      - name: Slack Notification on Failure
        uses: rtCamp/action-slack-notify@v2.2.0
        if: failure()
        env:
          SLACK_CHANNEL: alert_ci
          SLACK_TITLE: proto Failure
          SLACK_COLOR: danger
